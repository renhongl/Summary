
import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import { connect, Provider } from 'react-redux';
import { createStore } from 'redux';

const increaseAction = { type: 'increase'};

class Counter extends Component{
    constructor(props) {
        super(props);
    }

    render() {
        const { value, onIncreaseClick } = this.props;
        return (
            <div>
                <span>{value}</span>
                <button onClick={onIncreaseClick}>Increase</button>
            </div>
        )
    }
}

const mapStateToProps = (state) => {
    return {
        value: state.count
    }
}

const mapDispatchToProps = (dispatch) => {
    return {
        onIncreaseClick: () => dispatch(increaseAction)
    }
}

const CounterContainer = connect(
    mapStateToProps,
    mapDispatchToProps
)(Counter);

const counter = (state = { count: 0}, action) => {
    const count = state.count;
    switch (action.type) {
        case 'increase': 
            return { count: count + 1};
        default: 
            return state;
    }
}

const defaultState = {
    count: 0
};

const store = createStore(
    counter,
    defaultState
);


store.subscribe(() => {
    console.log(store.getState());
})

ReactDOM.render(
    <Provider store={store}>
        <CounterContainer />
    </Provider>,
    document.querySelector('#app')
)